"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const csv_builder_1 = __importDefault(require("csv-builder"));
require("./typings/csv-builder");
require("./typings/mongoose");
require("./typings/testable-stream");
/**
 * Create CSV streams from a mongoose schema
 * @param {mongoose.Schema} schema
 * @param {CsvBuilderOptions} options CsvBuilder options
 */
function csv(schema, options) {
    const builder = new csv_builder_1.default(Object.assign({ delimiter: ";" }, options));
    schema.static("csvReadStream", function (docs) {
        const data = docs.map((d) => d.toJSON ? d.toJSON() : d);
        return builder.createReadStream(data);
    });
    schema.static("findAndStreamCsv", function (query) {
        query = query || {};
        return this.find(query).cursor().pipe(builder.createTransformStream());
    });
    schema.static("aggregateAndStreamCsv", function (pipelines) {
        pipelines = pipelines || [];
        return this.aggregate(pipelines)
            .cursor()
            .pipe(builder.createTransformStream());
    });
    schema.static("csvTransformStream", function () {
        return builder.createTransformStream();
    });
}
exports.default = csv;
