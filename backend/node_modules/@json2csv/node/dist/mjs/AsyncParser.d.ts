/// <reference types="node" resolution-mode="require"/>
import { Readable, type TransformOptions } from 'stream';
import type { ParserOptions, StreamParserOptions } from '@json2csv/plainjs';
import JSON2CSVNodeTransform from './Transform.js';
export default class JSON2CSVNodeAsyncParser<TRaw extends object, T extends object> {
    private readonly opts;
    private asyncOpts;
    private readonly transformOpts;
    constructor(opts?: ParserOptions<TRaw, T>, asyncOpts?: StreamParserOptions, transformOpts?: TransformOptions);
    /**
     * Main function that converts json to csv.
     *
     * @param {Stream|Array|Object} data Array of JSON objects to be converted to CSV
     * @returns {Stream} A stream producing the CSV formated data as a string
     */
    parse(data: string | ArrayBufferView | Iterable<TRaw> | AsyncIterable<TRaw> | TRaw | ReadableStream<TRaw> | Readable): JSON2CSVNodeTransform<TRaw, T>;
}
//# sourceMappingURL=AsyncParser.d.ts.map